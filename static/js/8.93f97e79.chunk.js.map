{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","hooks/http.hook.js","services/MarvelService.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","src","img","alt","useHttp","useState","loading","setLoading","error","setError","process","setProcess","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useMarvelService","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","item","_transformCharacter","getCharacter","id","getAllComics","_transformComic","getComic","findNameCharacter","name","length","char","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","slice","comic","title","price","prices","page","pageCount","ErrorBoundary","state","errorInfo","console","log","this","setState","props","children","Component","AppBanner","className","avengers","avengersLogo","ComicsList","setComics","newComicsLoading","setNewComicsLoading","setOffset","useEffect","onComicsList","onRequest","initial","then","onComicsListLoaded","newComics","elements","i","imgStyle","style","objectFit","to","errorMessage","content","onClick","disabled","ComicsPage"],"mappings":"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","file":"static/js/8.93f97e79.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img  src={img} alt=\"Error\"></img>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useCallback } from \"react\";\r\n\r\nconst useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n        setLoading(true);\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`) \r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            setProcess('error');\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setError(null)\r\n        setProcess('loading')\r\n    }, []);\r\n\r\n    return {loading, request, error, clearError, process, setProcess};\r\n}\r\n\r\nexport default useHttp;","import useHttp from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError, process, setProcess} = useHttp();\r\n    const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n    const _apiKey = \"apikey=9fa8a4e7dd4fa0ac1bd263c9c97fcd0f\";\r\n    const _baseOffset = 210;\r\n    const _baseComicsOffset = 0;\r\n\r\n    //getAllCharacters Получает списки комических персонажей с дополнительными фильтрами\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(item => _transformCharacter(item));\r\n    } \r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n    \r\n    const getAllComics = async (offset = _baseComicsOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(item => _transformComic(item));\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComic(res.data.results[0]);\r\n    }\r\n\r\n    const findNameCharacter = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`)\r\n        if (res.data.results.length === 0) {\r\n            return {\r\n                name: \"not found\"\r\n            }\r\n        }\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        if (char.description === \"\") {\r\n            return {\r\n                id: char.id,\r\n                name: char.name,\r\n                description: \"No character description\",\r\n                thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n                homepage: char.urls[0].url,\r\n                wiki: char.urls[1].url,\r\n                comics: char.comics.items\r\n            }\r\n        } \r\n\r\n        if (char.description.length > 225) {\r\n            return {\r\n                id: char.id,\r\n                name: char.name,\r\n                description: char.description.slice(0, 225) + \"...\",\r\n                thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n                homepage: char.urls[0].url,\r\n                wiki: char.urls[1].url,\r\n                comics: char.comics.items\r\n            }\r\n        }\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComic = (comic) => {\r\n        return {\r\n            id: comic.id,\r\n            title: comic.title,\r\n            description: !comic.description ? \"No character description\" \r\n                : comic.description.length > 255 \r\n                    ? comic.description.slice(0, 255) + \"...\" \r\n                    : comic.description,\r\n            thumbnail: comic.thumbnail.path + '.' + comic.thumbnail.extension,\r\n            price:comic.prices[0].price,\r\n            page: comic.pageCount\r\n        }\r\n    }\r\n\r\n    return {loading, \r\n        error, \r\n        process,\r\n        setProcess, \r\n        getAllCharacters, \r\n        getCharacter, \r\n        clearError, \r\n        getAllComics, \r\n        getComic, \r\n        findNameCharacter};\r\n}\r\n\r\nexport default useMarvelService;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import './comicsList.scss';\nimport React, {useState, useEffect, useRef} from 'react';\nimport { Link } from 'react-router-dom';\nimport useMarvelService from '../../services/MarvelService'; \nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nconst ComicsList = () => {\n    const [comics, setComics] = useState([]);\n    const [newComicsLoading, setNewComicsLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onComicsList();\n    }, [])\n\n    const onComicsList = () => {\n        onRequest(offset, true);\n    }\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewComicsLoading(false) : setNewComicsLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded);\n    }\n\n    const onComicsListLoaded = (newComics) => {\n        let ended = false;\n\n        if (newComics.length < 8) {\n            ended = true;\n        }\n\n        setComics(comics => [...comics, ...newComics]);\n        setNewComicsLoading(newComicsLoading => false);\n        setOffset(offset => [offset + 8]);\n    }\n    console.log(comics);\n\n    const elements = comics.map((item, i) => {\n        let imgStyle = \"\";\n        item.thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ?\n            imgStyle = <img style={{objectFit: \"contain\"}} src={item.thumbnail} alt='comic' className=\"comics__item-img\"/> :\n            imgStyle = <img style={{objectFit: \"cover\"}} src={item.thumbnail} alt='comic' className=\"comics__item-img\"/>\n        return (\n            <li className=\"comics__item\" key={i}>\n                <Link to={`/comics/${item.id}`}>\n                    {imgStyle}\n                    <div className=\"comics__item-name\">{item.title}</div>\n                    <div className=\"comics__item-price\">{item.price}$</div>\n                </Link>\n            </li>\n        )\n    })\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const content = loading && !newComicsLoading ? <Spinner/> : <ul className=\"comics__grid\">{elements}</ul>\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {content}\n            <button \n            className=\"button button__main button__long\"\n            onClick={() => onRequest(offset)}\n            disabled={newComicsLoading}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ErrorBoundary>\r\n                <ComicsList/>\r\n            </ErrorBoundary>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}