{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/spinner/spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/errorBoundary/ErrorBoundary.js","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","item","_transformCharacter","getCharacter","id","char","description","name","thumbnail","path","extension","homepage","urls","wiki","comics","items","length","slice","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","alt","RandomChar","props","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","updateChar","Math","floor","random","then","catch","onError","console","log","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","objectFit","CharList","chars","newItemLoading","charEnded","itemsRef","setRef","ref","push","focusCharSelected","forEach","classList","remove","add","focus","onCharList","onRequest","onCharListLoaded","newChars","ended","onCharListLoading","onCharSelected","elements","i","CharItem","disabled","React","forwardRef","Skeleton","CharInfo","charId","prevProps","prevState","err","info","skeleton","ErrorBoundary","errorInfo","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80d200ae.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","\r\n\r\nclass MarvelService {\r\n    _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n    _apiKey = \"apikey=9fa8a4e7dd4fa0ac1bd263c9c97fcd0f\";\r\n    _baseOffset = 210;\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`) \r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    //getAllCharacters Получает списки комических персонажей с дополнительными фильтрами\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(item => this._transformCharacter(item))\r\n    } \r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    } \r\n\r\n    _transformCharacter = (char) => {\r\n        if (char.description === \"\") {\r\n            return {\r\n                id: char.id,\r\n                name: char.name,\r\n                description: \"No character description\",\r\n                thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n                homepage: char.urls[0].url,\r\n                wiki: char.urls[1].url,\r\n                comics: char.comics.items\r\n            }\r\n        } \r\n\r\n        if (char.description.length > 225) {\r\n            return {\r\n                id: char.id,\r\n                name: char.name,\r\n                description: char.description.slice(0, 225) + \"...\",\r\n                thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n                homepage: char.urls[0].url,\r\n                wiki: char.urls[1].url,\r\n                comics: char.comics.items\r\n            }\r\n        }\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;","\r\nconst Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"50px\" height=\"50px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;\r\n\r\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img src={img} alt=\"Error\"></img>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { Component } from 'react';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass RandomChar extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"constructor\")\n    }\n\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n    componentDidMount() {\n        this.updateChar();\n    };\n    componentDidUpdate() {\n        console.log(\"update\");\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char, \n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render() {\n        console.log(\"render\");\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null; \n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n\n    let imgStyle = \"\";\n    if (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n        imgStyle = <img style ={{objectFit: \"contain\"}} src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\n    } else {\n        imgStyle = <img style ={{objectFit: \"cover\"}} src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n                {imgStyle}\n                <div className=\"randomchar__info\">\n                    <p className=\"randomchar__name\">{name}</p>\n                    <p className=\"randomchar__descr\">\n                        {description}\n                    </p>\n                    <div className=\"randomchar__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n        </div>\n    )\n}\n\n\nexport default RandomChar;","import './charList.scss';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport MarvelService from '../../services/MarvelService'; \nimport Spinner from '../spinner/spinner';\n\nclass CharList extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        chars: [],\n        loading: true,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n\n    itemsRef = [];\n\n    setRef = (ref) => {\n        this.itemsRef.push(ref);\n        console.log(this.itemsRef);\n    }\n\n    focusCharSelected = (id) => {\n        this.itemsRef.forEach(item => {\n            item.classList.remove(\"char__item_selected\");\n        })\n        this.itemsRef[id].classList.add(\"char__item_selected\");\n        this.itemsRef[id].focus();\n    }\n\n    marvelService = new MarvelService();\n\n    onCharList = () => {\n        this.onRequest();\n    }\n\n    onCharListLoaded = (newChars) => {\n        let ended = false;\n\n        if (newChars.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({chars, offset}) => ({\n            chars: [...chars, ...newChars],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    componentDidMount() {\n        this.onCharList();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n    }\n\n\n\n    render () {\n        const {chars, loading, newItemLoading, offset, charEnded} = this.state;\n        const {onCharSelected} = this.props;\n    \n        const elements = chars.map((item, i) => {\n            let imgStyle = \"\";\n            if (item.thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n                imgStyle = <img style ={{objectFit: \"contain\"}} src={item.thumbnail} alt=\"No character description\"/>\n            } else {\n                imgStyle = <img style ={{objectFit: \"cover\"}} src={item.thumbnail} alt=\"No character description\"/>\n            }\n            return (\n                <CharItem \n                ref={this.setRef}\n                name={item.name} \n                imgStyle={imgStyle} \n                key={item.id} \n                onCharSelected={() => onCharSelected(item.id)}\n                focusCharSelected={() => this.focusCharSelected(i)}\n                />\n            )\n        })\n        \n        const content = loading ? <Spinner/> : <ul className='char__grid'>{elements}</ul>\n\n        return (\n            <div className=\"char__list\">\n                {content}\n                <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                onClick={() => this.onRequest(offset)}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                >\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n    \n}\n\n// const CharItem = ({name, imgStyle, onCharSelected}) => {\n//     return (\n//         <li className=\"char__item\" onClick={onCharSelected}>\n//                 {imgStyle}\n//                 <div className=\"char__name\">{name}</div>\n//         </li>\n//     )\n// }\n\nconst CharItem = React.forwardRef((props, ref) => {\n    const {name, imgStyle, onCharSelected, focusCharSelected} = props;\n    return (\n        <li className=\"char__item\" \n        onClick={() => {\n            onCharSelected()\n            focusCharSelected()\n        }} \n        ref={ref}\n        >\n            {imgStyle}\n            <div className=\"char__name\">{name}</div>\n        </li>\n    )\n})\n\n// class CharItem extends Component {\n//     constructor(props) {\n//         super(props);\n//     }\n\n//     render() {\n//         const {name, imgStyle, onCharSelected} = this.props;\n//         return (\n//             <li className=\"char__item\" onClick={\n//             () => \n//             {onCharSelected()}}>\n//                 {imgStyle} <div className=\"char__name\">{name}</div>\n//             </li>\n//         )\n//     }\n\n// }\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import PropTypes from 'prop-types';\nimport MarvelService from '../../services/MarvelService'; \nimport { Component } from 'react';\nimport './charInfo.scss';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nclass CharInfo extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    componentDidCatch(err, info) {\n        console.log(err, info);\n        this.setState({error: true});\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n        .getCharacter(charId)\n        .then(this.onCharLoaded)\n        .catch(this.onError)\n\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char, \n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n\n        const skeleton = (char || error || loading) ? null : <Skeleton/>\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null; \n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n    \n}\n\nconst View = ({char}) => {\n\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = \"\";\n    if (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n        imgStyle = <img style ={{objectFit: \"contain\"}} src={thumbnail} alt={name}/>\n    } else {\n        imgStyle = <img style ={{objectFit: \"cover\"}} src={thumbnail} alt={name}/>\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                    {imgStyle}\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">\n                    {description}\n                </div>\n                <div className=\"char__comics\">Comics:</div>\n                <ul className=\"char__comics-list\">\n                    {   \n                        comics.length === 0 ? <li className=\"char__comics-item\" >This character does not have a comic book list</li>:\n                        comics.length > 10 ? \n                        comics.slice(0, 10).map((item, i) => {return (\n                            <li className=\"char__comics-item\" key={i}>\n                                {item.name}\n                            </li>\n                        )}) :\n                        comics.map((item, i) => {\n                            return (\n                                <li className=\"char__comics-item\" key={i}>\n                                    {item.name}\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport decoration from '../../resources/img/vision.png';\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}